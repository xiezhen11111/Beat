碰撞实现的工具：
physicsEditor 是一款很好的box2d 形状生成工具，通过图形界面，点点鼠标，生成形状的plist文件，然后使用他的api生成fixtures加到需要的body中去
为机器人加入人工智能，加入战斗事件（分批的加入敌人（添加了战斗时的英雄移动限制打完这波才可以继续移动及镜头的效果）），使用scripted events事件做一个类似开场动画的效果即英雄不受控制的走向了设置的位置

To finish adding support for the boss in to the game, you still need to do the
following:
1. Spawn the boss enemy in spawnEnemies:.
在spawnEnemies中创建
2. Update the boss logic in update:.
在update中更新逻辑
3. Update the boss’s position in updatePositions.
在updatePositions中更新位置
4. Dynamically change the z-order of the boss in reorderActors.
在reorderActors中实时的更新z轴的层级
5. Implement collision handling in actionSpriteDidAttack:.
在actionSpriteDidAttack中实现碰撞处理
6. Give the boss some brains in initBrains.
在initBrains中添加人工智能


敌人（机器人，boss）的整体流程：
1.配置（位置，颜色等信息）：存储在Levels.plist文件中
（避免大批敌人冲下玩家，这样效果不好，现在实现分批显示，设定玩家走到某个位置后会显示一批怪物，只有击败这群怪物才可以继续前进）
a.设置敌人的显示（如何添加到舞台上），设置其位置
b.回收对象，复用
2.设置流程
	a.在spawnEnemies中创建
	b.在update中更新逻辑
	c.在updatePositions中更新位置（内部要进行位置的判定和计算）
	d.在reorderActors中实时的更新z轴的层级
	e.在actionSpriteDidAttack中实现碰撞处理
	f.在initBrains中添加人工智能


要点：
1.碰撞策略（攻击，受击的检测方案）（重点）
每个人物都设置了三种检测员（察觉愿。攻击圆，受击圆），当发生攻击动作的时候，会检测攻击圆是否碰到了对方的受击圆（勾股定理判定），从而检测了攻击到了哪个人物
（需要注意的是，由于攻击动画是多帧的，但是并不是每一帧都需要去检测而是动画帧中某一帧（真正的攻击帧）需要检测，所以当播放到这一帧的时候才去检测是否攻击到人物（具体是哪一帧会写死在攻击方法中））

2.动画系统（敌人，英雄（添加了武器）），整合多部分实现同步移动的策略
	a.机器人是由三部分整合在一起的，控制其实现同步移动
	b.英雄在获取了武器后，实现武器与英雄的同步移动（比例，位置，方向等）

3.AI（敌人的人工智能）（重点）
 简单的说就是根据人物当前的状态设置四种AI行为的权重，然后经计算来决定哪种行为

4.场景的镜头
	a.跟随人物
	b.限制必须打完当前场景中所有敌人才可以继续的镜头限制

5.受力的运动
	a.受击后退
	b.被击倒
	c.被击倒后恢复过来（英雄）
	d.武器掉落


6.人物的移动
	a.敌人移动的实现
	b.英雄与摇杆集合实现移动

7.敌人在移动的过程中碰到障碍物的处理（AI中处理玩家的行为上没有考虑碰到障碍物的处理）

8.人物的状态机
切换人物的状态


小要点：
1.武器系统
创建了武器父类（包含了拾取，掉落等），具体的武器继承该类，武器是由使用次数限制的

2.连击效果的实现
通过攻击时间的判断来实现二连击，三连击

3.boss的实现
其AI和机器人相同的，只是并不像机器人那样会被轻易的击倒（血量到达某个值时才会被击倒），可以后续的进行修改如调整其攻击行为的权重高点


4.人物显示细节
游戏中每个人物都设置阴影




